####################################################
# utilities for java
# prefix u
# array list

snippet List
  List<${1:class}> ${2:var} = new ArrayList<$1>();

snippet Map
  Map<${1:class}, ${2:class}> ${3:var} = new HashMap<$1, $2>();

snippet for
  for (${1:class} ${2:var}: ${3:collections}) {
    ${4:code}
  }


# Junit test code with Exception
snippet t.e
  @Test
  public void test_${1:test}() throws Exception {
    ${2:code}
  }

snippet t.b
  @Before
  public void setUp() throws Exception {
    ${1:code}
  }

snippet t.t
  @Test
  public void test_${1:test}() throws Exception {
    ${2:code}
  }

# joda-time today
snippet j-t.t
  new DateTime().toDateMidnight().toDateTime();
# joda-time format
snippet j-t.f
  DateTimeFormat.forPattern("${1:yyyyMMdd}").parseDateTime(${2:value})

###################################################
## spring

#spring controller
snippet @Controller
  import org.apache.commons.logging.*;
  import org.springframework.beans.factory.annotation.*;
  import org.springframework.stereotype.*;
  import org.springframework.web.bind.annotation.*;
  import org.springframework.web.servlet.*;

  @Controller
  @RequestMapping("${1:path}")
  public class ${2:name}Controller {
    private static Log log = LogFactory.getLog($2Controller.class);
    ${3:code}
  }

# spring autowired
snippet @Autow
    @Autowired
    private ${1:ClassName} ${2:var};


# spring request mapping
snippet @RequestM
  @RequestMapping(value = "${1:path}", method = RequestMethod.${2:GET,POST,PUT,DELET})
  public ModelAndView ${3:name}() {
    ModelAndView mav = new ModelAndView("${4:view}");
    return mav;
  }

# spring request mapping
snippet @RequestM2
  @RequestMapping(value = "${1:path}", method = RequestMethod.${2:GET,POST,PUT,DELET})
  public void ${3:name}(Model model) {
  }

# spring path variable
snippet @PathV
  (@PathVariable("${1:var}") String $1

snippet @Request
  @RequestParam(value = "${1:var}") final String $1

snippet @Request2
  @RequestParam(value = "${1:var}", required= ${2:true false} defaultValue = "${3:default}") final String $1


###################################################
## import

snippet i.t
  import static org.hamcrest.CoreMatchers.*;
  import static org.junit.Assert.*;

  import org.junit.*;

snippet i.s.a
  import org.springframework.beans.factory.annotation.*;
  import org.springframework.stereotype.*;

snippet i.s.t
  import org.springframework.transaction.annotation.*;

snippet i.j-t
  import org.joda.time.*;

snippet i.j-tf
  import org.joda.time.format.*;

snippet i.mb
  import org.apache.ibatis.annotations.*;


snippet Logger
  Logger logger = Logger.getLogger(`expand("%:t")`.class); 

snippet @Test
  @Test
  public void ${1:}() {
  }

###################################################
## eclipse like snippets
snippet sysout
  System.out.println(${1});
